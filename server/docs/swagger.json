{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/users/authentication/facebook": {
            "get": {
                "description": "Authenticate user via Facebook and return a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Facebook Authentication",
                "responses": {
                    "200": {
                        "description": "Successfully authenticated user with a token",
                        "schema": {
                            "$ref": "#/definitions/routes.TokenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/authentication/facebook/callback": {
            "get": {
                "description": "Handle callback from Facebook after user authentication",
                "tags": [
                    "Users"
                ],
                "summary": "Facebook Authentication Callback",
                "responses": {}
            }
        },
        "/users/authentication/google": {
            "get": {
                "description": "Authenticate user via Google and return a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Google Authentication",
                "responses": {
                    "200": {
                        "description": "Successfully authenticated user with a token",
                        "schema": {
                            "$ref": "#/definitions/routes.TokenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/authentication/google/callback": {
            "get": {
                "description": "Handle callback from Google after user authentication",
                "tags": [
                    "Users"
                ],
                "summary": "Google Authentication Callback",
                "responses": {}
            }
        },
        "/users/authentication/log_in": {
            "post": {
                "description": "Authenticate a user and return a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User authentication info (Email must be in valid format)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully authenticated user with a token",
                        "schema": {
                            "$ref": "#/definitions/routes.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or Invalid email format",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials or user doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/authentication/sign_up": {
            "post": {
                "description": "Register a new user to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "User registration info (Email must be in valid format)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered user with a token",
                        "schema": {
                            "$ref": "#/definitions/routes.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or Invalid email format",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User with the given email already exists",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "routes.Error": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        },
        "routes.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routes.Error"
                    }
                }
            }
        },
        "routes.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}